/* LD_Echo © 2024 by J Loiacano is licensed under CC BY-NC-ND 4.0  */
let LD_Echo_startTime = new Date; var LD_Echo = LD_Echo || {}; window.addEventListener("DOMContentLoaded", () => { LD_Echo.init() }), LD_Echo = { init: function () { this.SetUpLDEchoCloseButtons(), this.SetUpLDEchoMinimizeButtons(), this.SetUpLDEchoMaximizeButtons(), this.SetUpLDEchoLimitButtons(), this.SetUpLDEchoCopyButtons(), this.SetUpEchoConsoleLineCollapsibleElements(), this.LogLoadedToConsole() }, SetUpLDEchoCloseButtons: function () { var e = document.getElementsByClassName("echo-console-close-button"); null != e && (e = Array.from(e)).forEach(e => e.addEventListener("click", o => { LD_Echo.CloseConsole(e) })) }, SetUpLDEchoMinimizeButtons: function () { var e = document.getElementsByClassName("echo-console-minimize-button"); null != e && (e = Array.from(e)).forEach(e => e.addEventListener("click", o => { LD_Echo.MinimizeConsoleDisplay(e) })) }, SetUpLDEchoMaximizeButtons: function () { var e = document.getElementsByClassName("echo-console-maximize-button"); null != e && (e = Array.from(e)).forEach(e => e.addEventListener("click", o => { LD_Echo.MaximizeConsoleDisplay(e) })) }, SetUpLDEchoLimitButtons: function () { var e = document.getElementsByClassName("echo-console-limit-button"); null != e && (e = Array.from(e)).forEach(e => e.addEventListener("click", o => { LD_Echo.LimitConsoleDisplay(e) })) }, SetUpLDEchoCopyButtons: function () { var e = document.getElementsByClassName("echo-console-copy-button"); null != e && (e = Array.from(e)).forEach(e => e.addEventListener("click", o => { LD_Echo.CopyConsoleContents(e) })) }, SetUpEchoConsoleLineCollapsibleElements: function () { var e = document.getElementsByClassName("collapsable"); null != e && (collapsibleConsoleLineSpans = Array.from(e), collapsibleConsoleLineSpans.forEach(e => { LD_Echo.CheckIfLastCollapsibleChild(e) })); var o = document.getElementsByClassName("collapsable"); null != o && (collapsibleConsoleLineSpans = Array.from(o), collapsibleConsoleLineSpans.forEach(e => e.addEventListener("click", e => { e.stopPropagation(), LD_Echo.CollapseConsoleLineChildren(e.currentTarget) }))) }, CloseConsole: function (e) { e.closest(".echo-console-container").style.display = "none" }, MinimizeConsoleDisplay: function (e) { var o = e.closest(".echo-console-container"); o.classList.add("minimized-console"), o.classList.remove("limited-console"), o.classList.remove("maximized-console") }, MaximizeConsoleDisplay: function (e) { var o = e.closest(".echo-console-container"); o.classList.add("maximized-console"), o.classList.remove("minimized-console"), o.classList.remove("limited-console") }, LimitConsoleDisplay: function (e) { var o = e.closest(".echo-console-container"); o.classList.add("limited-console"), o.classList.remove("minimized-console"), o.classList.remove("maximized-console") }, CopyConsoleContents: function (e) { var o = e.closest(".echo-console-container"), t = (o.querySelector(".title"), o.querySelector(".echo-console-display")), n = e.querySelector(".echo-console-copy-button-text"), s = t.querySelector(".hidden-console-text-area"); s.select(), s.setSelectionRange(0, 99999), e.classList.add("copying"), n.textContent = "COPYING...", navigator.clipboard.writeText(s.value).then(() => { setTimeout(() => { e.classList.remove("copying"), e.classList.add("copied"), n.textContent = "COPIED!", setTimeout(() => { e.classList.remove("copied"), n.textContent = "COPY" }, 2e3) }, 1e3) }).catch(() => { alert("something went wrong") }) }, CheckIfLastCollapsibleChild: function (e) { null == e.parentElement.querySelector(".echo-console-line") && LD_Echo.RemoveCollapsibility(e) }, RemoveCollapsibility: function (e) { var o = e.querySelector(".up-arrow"), t = e.querySelector(".down-arrow"); e.removeAttribute("title"), e.classList.remove("collapsable"), o.remove(), t.remove() }, CollapseConsoleLineChildren: function (e) { var o = e.parentElement.classList; o.contains("collapsed") ? (o.remove("collapsed"), e.title = "Collapse") : (o.add("collapsed"), e.title = "Expand") }, LogLoadedToConsole: function () { let e = new Date - LD_Echo_startTime; console.log("LD_Echo.js has been loaded in: " + e + "ms") } };